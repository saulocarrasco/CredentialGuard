// <auto-generated />
using System;
using CredentialGuard.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CredentialGuard.Infrastructure.Data.Migrations
{
    [DbContext(typeof(CredentialGuardDbContext))]
    partial class CredentialGuardDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CredentialGuard.Core.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTime(2023, 4, 1, 12, 55, 2, 353, DateTimeKind.Local).AddTicks(691),
                            LastName = "Uzumaki",
                            Name = "Naruto",
                            UpdatedAt = new DateTime(2023, 4, 1, 12, 55, 2, 353, DateTimeKind.Local).AddTicks(718)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTime(2023, 4, 1, 12, 55, 2, 353, DateTimeKind.Local).AddTicks(1377),
                            LastName = "Arena Roja",
                            Name = "Sasori",
                            UpdatedAt = new DateTime(2023, 4, 1, 12, 55, 2, 353, DateTimeKind.Local).AddTicks(1387)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTime(2023, 4, 1, 12, 55, 2, 353, DateTimeKind.Local).AddTicks(1468),
                            LastName = "Sarutobi",
                            Name = "Asuma",
                            UpdatedAt = new DateTime(2023, 4, 1, 12, 55, 2, 353, DateTimeKind.Local).AddTicks(1474)
                        });
                });

            modelBuilder.Entity("CredentialGuard.Core.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("CredentialGuard.Core.Entities.PermissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PermissionsTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTime(2023, 4, 1, 12, 55, 2, 342, DateTimeKind.Local).AddTicks(6485),
                            Description = "Enfermedad",
                            UpdatedAt = new DateTime(2023, 4, 1, 12, 55, 2, 347, DateTimeKind.Local).AddTicks(7052)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTime(2023, 4, 1, 12, 55, 2, 352, DateTimeKind.Local).AddTicks(4904),
                            Description = "Diligencias",
                            UpdatedAt = new DateTime(2023, 4, 1, 12, 55, 2, 352, DateTimeKind.Local).AddTicks(4955)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTime(2023, 4, 1, 12, 55, 2, 352, DateTimeKind.Local).AddTicks(5375),
                            Description = "Otros",
                            UpdatedAt = new DateTime(2023, 4, 1, 12, 55, 2, 352, DateTimeKind.Local).AddTicks(5382)
                        });
                });

            modelBuilder.Entity("CredentialGuard.Core.Entities.Permission", b =>
                {
                    b.HasOne("CredentialGuard.Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
